plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

group = 'notquests'
version = '1.4.7'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'spigot repo (bstats)'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'citizens'
        url = 'https://repo.citizensnpcs.co/'
    }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'vault'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'inventorygui (minebench)'
        url = 'https://repo.minebench.de/'
    }
}

dependencies {
    //compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    //does not work  implementation "net.kyori:adventure-platform-bukkit:4.0.0"
    implementation 'org.bstats:bstats-bukkit:2.2.1'
    compileOnly 'net.citizensnpcs:citizens-main:2.0.28-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.10.10'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    implementation 'de.themoep:inventorygui:1.5-SNAPSHOT'
    implementation 'commons-io:commons-io:2.11.0'
}


shadowJar {

    dependencies {
        include dependency("de.themoep:inventorygui:1.5-SNAPSHOT")
        include dependency('org.bstats:bstats-bukkit')
        include dependency('org.bstats:bstats-base')
        include dependency('commons-io:commons-io')
        //does not work include(dependency('net.kyori.adventure.platform.bukkit:.*'))


    }

    //does not work  relocate 'net.kyori.adventure.platform.bukkit', 'notquests.notquests.shaded.net.kyori'


    dependencies {
        relocate("de.themoep", "notquests.notquests.shaded.de.themoep")
        relocate("org.bstats.bukkit", "notquests.notquests.shaded.org.bstats.bukkit")
        relocate("org.bstats", "notquests.notquests.shaded.org.bstats")
        relocate("commons.io", "notquests.notquests.shaded.commons.io")

    }





    archiveClassifier.set(null)


}


def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
        options.encoding = "UTF-8"
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
