plugins {
    id 'com.github.johnrengelman.shadow'
    id 'java'
    id 'maven-publish'
}

group = 'rocks.gravili.notquests'
version = '3.0.1'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'spigot repo (bstats)'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
        content {
            includeGroup 'org.spigotmc'
        }
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'citizens'
        url = 'https://repo.citizensnpcs.co/'
        content {
            includeGroup 'net.citizensnpcs'
        }
    }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'

        content {
            includeGroup 'me.clip'
        }
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
        content {
            includeGroup 'com.github.MilkBowl'
            includeGroup 'com.github.TheBusyBiscuit'
            includeGroup 'com.github.retrooper'
            includeGroup 'com.github.retrooper.packetevents'
            includeGroup 'io.github.retrooper'
            includeGroup 'com.github.AlessioGr'
            includeGroup 'com.github.AlessioGr.packetevents'
            includeGroup 'com.github.TownyAdvanced'
            includeGroup 'com.github.Zrips'
        }
        metadataSources {
            artifact()
        }
    }
    maven {
        name = 'inventorygui (minebench)'
        url = 'https://repo.minebench.de/'
        content {
            includeGroup 'de.themoep'
        }
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
        content {
            includeGroup 'net.kyori'
        }
    }
    maven {
        url 'https://mvn.lumine.io/repository/maven-public/'
        content {
            includeGroup 'io.lumine.xikage'
        }
    }
    maven {
        url 'https://betonquest.org/nexus/repository/betonquest/'
        content {
            includeGroup 'org.betonquest'
        }
        metadataSources {
            artifact()
        }
    }

    maven {
        url 'https://maven.enginehub.org/repo/'
        content {
            includeGroup 'com.sk89q.worldedit'
        }
        metadataSources {
            artifact()
        }
    }

    maven {
        url "https://repo.incendo.org/content/repositories/snapshots"
    }

    maven { url 'https://libraries.minecraft.net/' }

    //mavenLocal()

}

dependencies {

    implementation project(':spigot')
    implementation project(':paper')

    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    implementation 'io.papermc:paperlib:1.0.7'
}

/**
 * Configure NotQuests for shading
 */
String path = 'rocks.gravili.notquests.shadow'
shadowJar {
    minimize()
    relocate('rocks.gravili.notquests.spigot', path.concat('.spigot'))
    relocate('rocks.gravili.notquests.paper', path.concat('.paper'))
    relocate('io.papermc.lib', path.concat('.paperlib'))

    dependencies {
        include dependency(':spigot')
        include dependency(':paper')
        include dependency('io.papermc:paperlib:')
    }


    //exclude('com.mojang:brigadier')

    //relocate('io.papermc.lib', path.concat('.paper'))
    relocate('org.bstats', path.concat('.bstats'))

    archiveClassifier.set(null)
}


def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = 17
    targetCompatibility = 16
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
        options.encoding = "UTF-8"
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'rocks.gravili.notquests'
            artifactId = 'NotQuests'
            version = '3.0.1'

            from components.java
        }
    }
}
